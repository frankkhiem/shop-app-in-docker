version: '3'

networks:
  laravel:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: "nginx_${APP_NAME}"
    ports:
      - "8080:80"
      - "444:443"
    volumes:
      - ./src:/var/www/html
      - ./nginx_default.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:8.0.25
    container_name: "mysql_${APP_NAME}"
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: root_password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes: 
      - ./sample_database:/data
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "php_${APP_NAME}"
    volumes:
      - ./src:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - laravel

  npm:
    image: node:14.1
    tty: true
    container_name: "npm_${APP_NAME}"
    ports: 
      - 6001:6001
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    networks:
      - laravel

  redis:
    image: redis:alpine3.14
    container_name: "redis_${APP_NAME}"
    restart: unless-stopped
    tty: true
    ports:
      - "6380:6379"
    networks:
      - laravel